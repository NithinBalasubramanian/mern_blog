{"version":3,"sources":["components/addBlog.js","App.js","reportWebVitals.js","index.js"],"names":["AddBlog","useState","Listdata","setListdata","useEffect","fetchAll","axios","get","then","res","data","catch","error","console","log","initialState","datas","setDatas","onChangeHandler","e","nowName","target","name","nowValue","value","prevState","className","onSubmit","preventDefault","payload","title","auther","blog","post","placeholder","onChange","type","map","itm","k","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAuGeA,MAlGf,WAAoB,IAAD,EAEkBC,mBAAS,IAF3B,mBAETC,EAFS,KAEEC,EAFF,KAIfC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAW,WACbC,IAAMC,IAAI,6BACTC,MAAK,SAACC,GACHN,EAAYM,EAAIC,SAEnBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAIhBG,EAAe,CACf,MAAU,GACV,OAAW,GACX,KAAS,IArBE,EAwBYd,mBAASc,GAxBrB,mBAwBTC,EAxBS,KAwBDC,EAxBC,KA0BTC,EAAkB,SAACC,GACrB,IAAIC,EAAUD,EAAEE,OAAOC,KACnBC,EAAWJ,EAAEE,OAAOG,MACxBP,GAAS,SAAAQ,GACL,OAAO,2BAAIA,GAAX,kBAAyBL,EAAYG,QAwB7C,OACI,sBAAKG,UAAU,YAAf,UACI,oBAAIA,UAAU,OAAd,sBACA,uBAAMC,SAvBO,SAACR,GAClBA,EAAES,iBAEF,IAAIC,EAAU,CACVC,MAAQd,EAAMc,MACdC,OAASf,EAAMe,OACfC,KAAOhB,EAAMgB,MAGjB1B,IAAM2B,KAAK,gBAAgBJ,GAC1BrB,MAAK,SAAAC,GACFI,QAAQC,IAAI,QACZT,OAEHM,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEhBK,EAASF,IAML,UACI,qBAAKW,UAAU,aAAf,SACI,uBAAOA,UAAU,eAAeJ,KAAK,QAAQY,YAAY,QAAQV,MAAQR,EAAMc,MAAQK,SAAWjB,MAEtG,qBAAKQ,UAAU,aAAf,SACI,uBAAOA,UAAU,eAAeJ,KAAK,SAASY,YAAY,SAASV,MAAQR,EAAMe,OAASI,SAAWjB,MAEzG,qBAAKQ,UAAU,aAAf,SACI,0BAAUA,UAAU,eAAeJ,KAAK,OAAOY,YAAY,OAAOV,MAAQR,EAAMgB,KAAOG,SAAWjB,EAAlG,SAAsHF,EAAMgB,SAEhI,wBAAQI,KAAK,SAASV,UAAU,oCAAhC,uBAEJ,sBAAKA,UAAU,OAAf,UACI,gDACA,wBAAOA,UAAU,uBAAjB,UACI,gCACI,+BACI,sCACA,uCACA,wCACA,2CAGR,gCACExB,EAASmC,KAAI,SAACC,EAAIC,GAChB,OACI,+BACI,6BAAaA,EAAE,GAANA,GACT,6BAAKD,EAAIR,QACT,6BAAKQ,EAAIP,SACT,6BAAKO,EAAIN,yBChF1BQ,MATf,WAEE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCKSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1b9ec410.chunk.js","sourcesContent":["import React , { useState , useEffect } from 'react';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction AddBlog() {\r\n\r\n    let [ Listdata , setListdata ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchAll();\r\n    }, [])\r\n\r\n    const fetchAll = () =>{\r\n        axios.get('http://localhost:5000/api')\r\n        .then((res) => {\r\n            setListdata(res.data);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    let initialState = {\r\n        'title' : '',\r\n        'auther' : '',\r\n        'blog' : ''\r\n    }\r\n\r\n    let [ datas , setDatas ] = useState(initialState);\r\n\r\n    const onChangeHandler = (e) =>{\r\n        let nowName = e.target.name;\r\n        let nowValue = e.target.value;\r\n        setDatas(prevState => {\r\n            return {...prevState , [ nowName ] : nowValue }\r\n        });\r\n    }\r\n\r\n    const onSubmitData = (e) => {\r\n        e.preventDefault();\r\n\r\n        let payload = {\r\n            title : datas.title,\r\n            auther : datas.auther,\r\n            blog : datas.blog\r\n        };\r\n\r\n        axios.post('/api/savedata',payload)\r\n        .then(res => {\r\n            console.log('sent');\r\n            fetchAll();\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n        setDatas(initialState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"mt-5\">Add Blog</h2>\r\n            <form onSubmit={ onSubmitData } >\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" name=\"title\" placeholder=\"title\" value={ datas.title } onChange={ onChangeHandler } />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" name=\"auther\" placeholder=\"auther\" value={ datas.auther } onChange={ onChangeHandler } />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea className=\"form-control\" name=\"blog\" placeholder=\"blog\" value={ datas.blog } onChange={ onChangeHandler } >{datas.blog }</textarea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-sm btn-primary blogSubmit\">Submit</button>\r\n            </form>\r\n            <div className=\"mt-5\">\r\n                <h2>List Blog Data</h2>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>S.no</th>\r\n                            <th>Title</th>\r\n                            <th>Auther</th>\r\n                            <th>Blog</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { Listdata.map((itm,k) => {\r\n                        return(\r\n                            <tr>\r\n                                <td key={k}>{k+1}</td>\r\n                                <td>{itm.title}</td>\r\n                                <td>{itm.auther}</td>\r\n                                <td>{itm.blog}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBlog\r\n","import './App.css';\nimport AddBlog from './components/addBlog';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AddBlog />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}